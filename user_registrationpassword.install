<?php

/**
 * @file
 * Uninstall function to clean up variables data.
 */

/**
 * Implements hook_install().
 */
function user_registrationpassword_install() {
  $config = config('system.core');
  // Set the correct default configuration settings so the module needs no more
  // configuration. Enable account registration without e-mail confirmation.
  $config->set('user_register', USER_REGISTER_VISITORS);
  // Disable e-mail verification.
  $config->set('user_email_verification', FALSE);
  // Set the registration register with pass, but require confirmation.
  $config->set('password_registration', USER_REGISTRATIONPASSWORD_VERIFICATION_PASS);
  $config->set('password_registration_ftll_expire', FALSE);
  $config->set('password_registration_ftll_timeout', 86400);
  $config->save();

  $config = config('user.mail');
  // Prevent standard notification email to administrators and to user.
  $config->set('register_pending_approval_notify', FALSE);
  $config->set('register_no_approval_required_notify', FALSE);

  // Save the original activation email template to a temporary variable so we
  // can reset them if/when we uninstall the module.
  $status_activated_subject = $config->get('status_activated_subject');
  $config->set('status_activated_subject_original', $status_activated_subject);
  $status_activated_body = $config->get('status_activated_body');
  $config->set('status_activated_body_original', $status_activated_body);

  $config->set('password_register_subject', $form_state['values']['user_registrationpassword_register_subject']);
  $config->set('password_register_body', $form_state['values']['user_registrationpassword_register_body']);

  // Set basic e-mail template variable for the account activation e-mail.
  $config->set('status_activated_subject', 'Account details for [user:name] at [site:name]');
  $config->set('status_activated_body', '[user:name],

Your account at [site:name] has been activated.

You will be able to log in to [site:login-url] in the future using:

username: [user:name]
password: your password.

-- [site:name] team');

  $config->save();
}

/**
 * Implements hook_uninstall().
 */
function user_registrationpassword_uninstall() {
  $config = config('system.core');
  // Reset system variables back to save defauls.
  $config->set('user_register', USER_REGISTER_VISITORS_ADMINISTRATIVE_APPROVAL);
  $config->set('user_email_verification', TRUE);
  $config->clear('password_registration');
  $config->clear('password_registration_ftll_expire');
  $config->clear('password_registration_ftll_timeout');
  $config->save();

  $config = config('user.mail');
  // Delete config values for this module.
  $config->clear('register_pending_approval_notify');
  $config->clear('register_no_approval_required_notify');
  $config->clear('password_register_subject');
  $config->clear('password_register_body');
  // Reset the original (or previous adapted) ativation email template.
  $config->set('status_activated_subject', $config->get('status_activated_subject_original'));
  $config->set('status_activated_body', $config->get('status_activated_body_original'));
  // Delete placeholder items.
  $config->clear('status_activated_subject_original');
  $config->clear('status_activated_body_original');
  $config->save();
}

/**
 * Implements hook_update_last_removed().
 */
function user_registrationpassword_update_last_removed() {
  return 7002;
}

/**
 * Implements hook_update_n(). Convert from variables to config.
 */
function user_registrationpassword_update_1000() {
  $config = config('system.core');
  $config->set('password_registration', update_variable_get('user_registrationpassword_registration', USER_REGISTRATIONPASSWORD_VERIFICATION_PASS));
  $config->set('password_registration_ftll_expire', update_variable_get('user_registrationpassword_registration_ftll_expire', FALSE));
  $config->set('password_registration_ftll_timeout', update_variable_get('user_registrationpassword_registration_ftll_timeout', 86400));
  $config->save();

  $config = config('user.mail');
  $config->set('register_pending_approval_notify', update_variable_get('user_mail_register_pending_approval_notify', FALSE));
  $config->set('register_no_approval_required_notify', update_variable_get('user_mail_register_no_approval_required_notify', FALSE));
  $config->set('password_register_subject', update_variable_get('user_registrationpassword_register_subject', ''));
  $config->set('password_register_body', update_variable_get('user_registrationpassword_register_body', ''));
  $config->set('status_activated_subject_original', update_variable_get('user_registrationpassword_user_mail_status_activated_subject_original', ''));
  $config->set('status_activated_body_original', update_variable_get('user_registrationpassword_user_mail_status_activated_body_original', ''));
  $config->save();
}
